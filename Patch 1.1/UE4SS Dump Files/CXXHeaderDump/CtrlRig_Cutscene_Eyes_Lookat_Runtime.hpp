#ifndef UE4SS_SDK_CtrlRig_Cutscene_Eyes_Lookat_Runtime_HPP
#define UE4SS_SDK_CtrlRig_Cutscene_Eyes_Lookat_Runtime_HPP

class UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C : public UControlRig
{
    double EyelidsOffsetAbs;                                                          // 0x0560 (size: 0x8)
    FVector LookAtLocation;                                                           // 0x0568 (size: 0x18)
    FVector LookAtLocationLeftEye;                                                    // 0x0580 (size: 0x18)
    double LookAtWeight;                                                              // 0x0598 (size: 0x8)
    bool bLookUp;                                                                     // 0x05A0 (size: 0x1)
    double HeadWeight;                                                                // 0x05A8 (size: 0x8)
    bool bShouldOffOnEdges;                                                           // 0x05B0 (size: 0x1)
    bool Condition;                                                                   // 0x05B1 (size: 0x1)
    double ProceduralEyesIdleWeight;                                                  // 0x05B8 (size: 0x8)
    double ProceduralEyesIdleAmplitude;                                               // 0x05C0 (size: 0x8)
    double ProceduralEyesIdleIntensity;                                               // 0x05C8 (size: 0x8)
    double CurrentEyeCurveTime;                                                       // 0x05D0 (size: 0x8)
    double EyesOnEdgeTurnOffWeight;                                                   // 0x05D8 (size: 0x8)

}; // Size: 0x5E0

class URigVMMemory_Literal : public URigVMMemoryStorage
{
    FRigElementKey RigVMModel___RigUnit_SetTranslation_Item__Const;                   // 0x0028 (size: 0xC)
    TEnumAsByte<EBoneGetterSetterMode> RigVMModel___RigUnit_SetTranslation_Space__Const; // 0x0034 (size: 0x1)
    uint8 RigVMModel___RigUnit_SetTranslation_bInitial__Const;                        // 0x0035 (size: 0x1)
    float RigVMModel___RigUnit_SetTranslation_Weight__Const;                          // 0x0038 (size: 0x4)
    uint8 RigVMModel___RigUnit_SetTranslation_bPropagateToChildren__Const;            // 0x003C (size: 0x1)
    TEnumAsByte<EBoneGetterSetterMode> RigVMModel___LimitPosition_1_Set_Transform_2_Space__Const; // 0x003D (size: 0x1)
    double RigVMModel___LimitPosition_1_Tan_Value__Const;                             // 0x0040 (size: 0x8)
    double RigVMModel___LimitPosition_1_Subtract_B__Const;                            // 0x0048 (size: 0x8)
    double RigVMModel___LimitPosition_1_Greater_B__Const;                             // 0x0050 (size: 0x8)
    float RigVMModel___LimitPosition_1_If_True__Const;                                // 0x0058 (size: 0x4)
    float RigVMModel___LimitPosition_1_If_False__Const;                               // 0x005C (size: 0x4)
    FTransform RigVMModel___LimitPosition_1_Set_Transform_2_Value__Const;             // 0x0060 (size: 0x60)
    double RigVMModel___LimitPosition_1_Clamp_1_Minimum__Const;                       // 0x00C0 (size: 0x8)
    double RigVMModel___LimitPosition_1_Clamp_1_Maximum__Const;                       // 0x00C8 (size: 0x8)
    double RigVMModel___LimitPosition_1_IsNearlyEqual_Tolerance__Const;               // 0x00D0 (size: 0x8)
    float RigVMModel___LimitPosition_1_If_2_True__Const;                              // 0x00D8 (size: 0x4)
    float RigVMModel___LimitPosition_1_If_2_False__Const;                             // 0x00DC (size: 0x4)
    float RigVMModel___LimitPosition_1_If_1_False__Const;                             // 0x00E0 (size: 0x4)
    double RigVMModel___LimitPosition_1_Clamp_Minimum__Const;                         // 0x00E8 (size: 0x8)
    double RigVMModel___LimitPosition_1_Clamp_Maximum__Const;                         // 0x00F0 (size: 0x8)
    FRigElementKey RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Item__Const; // 0x00F8 (size: 0xC)
    FTransform RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Value__Const; // 0x0110 (size: 0x60)
    FRigElementKey RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_Item__Const; // 0x0170 (size: 0xC)
    TEnumAsByte<EAxis::Type> RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Axis__Const; // 0x017C (size: 0x1)
    float RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_Length__Const; // 0x0180 (size: 0x4)
    FRigElementKey RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_Item__Const; // 0x0184 (size: 0xC)
    float RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_1_Length__Const; // 0x0190 (size: 0x4)
    FName RigVMModel___RigUnit_GetFloatAnimationChannel_Control__Const;               // 0x0194 (size: 0x8)
    FName RigVMModel___RigUnit_GetFloatAnimationChannel_Channel__Const;               // 0x019C (size: 0x8)
    FRigElementKey RigVMModel___AimItem_1_2_Item__Const;                              // 0x01A4 (size: 0xC)
    FRigUnit_AimItem_Target RigVMModel___AimItem_1_2_Primary__Const;                  // 0x01B0 (size: 0x48)
    FRigUnit_AimItem_Target RigVMModel___AimItem_1_2_Secondary__Const;                // 0x01F8 (size: 0x48)
    FRigUnit_AimBone_DebugSettings RigVMModel___AimItem_1_2_DebugSettings__Const;     // 0x0240 (size: 0x70)
    FTransform RigVMModel___OffsetTransformForItem_1_2_OffsetTransform__Const;        // 0x02B0 (size: 0x60)
    FRigElementKey RigVMModel___AimItem_1_1_1_Item__Const;                            // 0x0310 (size: 0xC)
    FRigUnit_AimItem_Target RigVMModel___AimItem_1_1_1_Secondary__Const;              // 0x0320 (size: 0x48)
    FTransform RigVMModel___OffsetTransformForItem_1_2_1_OffsetTransform__Const;      // 0x0370 (size: 0x60)
    double RigVMModel___CalculateEyelidsOffset_1_Subtract_B__Const;                   // 0x03D0 (size: 0x8)
    double RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_SourceMinimum__Const;      // 0x03D8 (size: 0x8)
    double RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_TargetMinimum__Const;      // 0x03E0 (size: 0x8)
    FRigElementKey RigVMModel___OffsetTransformForItem_1_2_1_1_5_Item__Const;         // 0x03E8 (size: 0xC)
    FQuat RigVMModel___If_3_1_1_True__Const;                                          // 0x0400 (size: 0x20)
    FQuat RigVMModel___If_3_1_1_False__Const;                                         // 0x0420 (size: 0x20)
    FVector RigVMModel___Scale_2_3_Value__Const;                                      // 0x0440 (size: 0x18)
    FVector RigVMModel___Scale_2_Value__Const;                                        // 0x0458 (size: 0x18)
    FRigElementKey RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_Item__Const;       // 0x0470 (size: 0xC)
    FTransform RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_OffsetTransform__Const; // 0x0480 (size: 0x60)
    FQuat RigVMModel___If_3_1_True__Const;                                            // 0x04E0 (size: 0x20)
    FQuat RigVMModel___If_3_1_False__Const;                                           // 0x0500 (size: 0x20)
    FVector RigVMModel___Scale_2_1_1_Value__Const;                                    // 0x0520 (size: 0x18)
    FVector RigVMModel___Scale_2_1_Value__Const;                                      // 0x0538 (size: 0x18)
    FRigElementKey RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_Item__Const;       // 0x0550 (size: 0xC)
    FQuat RigVMModel___If_3_True__Const;                                              // 0x0560 (size: 0x20)
    FQuat RigVMModel___If_3_False__Const;                                             // 0x0580 (size: 0x20)
    FVector RigVMModel___Scale_2_2_3_Value__Const;                                    // 0x05A0 (size: 0x18)
    FVector RigVMModel___Scale_2_2_Value__Const;                                      // 0x05B8 (size: 0x18)
    FRigElementKey RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_Item__Const;     // 0x05D0 (size: 0xC)
    FQuat RigVMModel___If_3_1_2_False__Const;                                         // 0x05E0 (size: 0x20)
    FVector RigVMModel___Scale_2_2_1_1_Value__Const;                                  // 0x0600 (size: 0x18)
    FVector RigVMModel___Scale_2_2_1_Value__Const;                                    // 0x0618 (size: 0x18)
    FRigElementKey RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_Item__Const;       // 0x0630 (size: 0xC)
    FQuat RigVMModel___If_3_1_1_1_False__Const;                                       // 0x0640 (size: 0x20)
    FVector RigVMModel___Scale_2_3_1_Value__Const;                                    // 0x0660 (size: 0x18)
    FVector RigVMModel___Scale_2_4_Value__Const;                                      // 0x0678 (size: 0x18)
    FRigElementKey RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_Item__Const;     // 0x0690 (size: 0xC)
    FVector RigVMModel___Scale_2_1_1_1_Value__Const;                                  // 0x06A0 (size: 0x18)
    FVector RigVMModel___Scale_2_1_2_Value__Const;                                    // 0x06B8 (size: 0x18)
    FRigElementKey RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_Item__Const;     // 0x06D0 (size: 0xC)
    FRigElementKey RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_Item__Const;   // 0x06DC (size: 0xC)
    FQuat RigVMModel___If_3_1_1_1_1_2_False__Const;                                   // 0x06F0 (size: 0x20)
    FVector RigVMModel___Scale_2_2_1_2_Value__Const;                                  // 0x0710 (size: 0x18)
    double RigVMModel___ProceduralEyesIdle_Divide_1_B__Const;                         // 0x0728 (size: 0x8)
    float RigVMModel___ProceduralEyesIdle_If_True__Const;                             // 0x0730 (size: 0x4)
    FRotator RigVMModel___ProceduralEyesIdle_Cast_Value__Const;                       // 0x0738 (size: 0x18)
    FRuntimeFloatCurve RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_Curve__Const; // 0x0750 (size: 0x88)
    FRuntimeFloatCurve RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_Curve__Const; // 0x07D8 (size: 0x88)
    FRuntimeFloatCurve RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_Curve__Const; // 0x0860 (size: 0x88)
    FRuntimeFloatCurve RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_2_Curve__Const; // 0x08E8 (size: 0x88)
    FRuntimeFloatCurve RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_2_Curve__Const; // 0x0970 (size: 0x88)
    FRuntimeFloatCurve RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_2_Curve__Const; // 0x09F8 (size: 0x88)

}; // Size: 0xA80

class URigVMMemory_Work : public URigVMMemoryStorage
{
    FControlRigExecuteContext ExecuteContext_;                                        // 0x0028 (size: 0x38)
    FVector RigVMModel___ToRigSpace_Location_1_Global;                                // 0x0060 (size: 0x18)
    TArray<FCachedRigElement> RigVMModel___RigUnit_SetTranslation_CachedIndex;        // 0x0078 (size: 0x10)
    FTransform RigVMModel___LimitPosition_1_GetTransform_Transform;                   // 0x0090 (size: 0x60)
    TArray<FCachedRigElement> RigVMModel___LimitPosition_1_GetTransform_CachedIndex;  // 0x00F0 (size: 0x10)
    double RigVMModel___LimitPosition_1_Subtract_Result;                              // 0x0100 (size: 0x8)
    double RigVMModel___LimitPosition_1_Multiply_Result;                              // 0x0108 (size: 0x8)
    double RigVMModel___LimitPosition_1_Tan_Result;                                   // 0x0110 (size: 0x8)
    double RigVMModel___LimitPosition_1_Absolute_Result;                              // 0x0118 (size: 0x8)
    double RigVMModel___LimitPosition_1_Absolute_Value;                               // 0x0120 (size: 0x8)
    double RigVMModel___LimitPosition_1_Subtract_1_Result;                            // 0x0128 (size: 0x8)
    double RigVMModel___LimitPosition_1_Multiply_1_Result;                            // 0x0130 (size: 0x8)
    float RigVMModel___LimitPosition_1_If_Result;                                     // 0x0138 (size: 0x4)
    uint8 RigVMModel___LimitPosition_1_Greater_Result;                                // 0x013C (size: 0x1)
    double RigVMModel___LimitPosition_1_Greater_A;                                    // 0x0140 (size: 0x8)
    double RigVMModel___LimitPosition_1_Multiply_1_A;                                 // 0x0148 (size: 0x8)
    double RigVMModel___LimitPosition_1_Absolute_1_Result;                            // 0x0150 (size: 0x8)
    double RigVMModel___LimitPosition_1_Maximum_Maximum_1_Result;                     // 0x0158 (size: 0x8)
    double RigVMModel___LimitPosition_1_Maximum_Maximum_Result;                       // 0x0160 (size: 0x8)
    double RigVMModel___LimitPosition_1_Maximum_Maximum_B;                            // 0x0168 (size: 0x8)
    double RigVMModel___LimitPosition_1_Clamp_1_Result;                               // 0x0170 (size: 0x8)
    FTransform RigVMModel___LimitPosition_1_Set_Transform_2_Value__IO;                // 0x0180 (size: 0x60)
    TArray<FCachedRigElement> RigVMModel___LimitPosition_1_Set_Transform_2_CachedIndex; // 0x01E0 (size: 0x10)
    double RigVMModel___LimitPosition_1_Clamp_Result;                                 // 0x01F0 (size: 0x8)
    double RigVMModel___LimitPosition_1_Add_Result;                                   // 0x01F8 (size: 0x8)
    float RigVMModel___LimitPosition_1_If_1_Result;                                   // 0x0200 (size: 0x4)
    uint8 RigVMModel___LimitPosition_1_MathBoolOr_Result;                             // 0x0204 (size: 0x1)
    uint8 RigVMModel___LimitPosition_1_IsNearlyEqual_Result;                          // 0x0205 (size: 0x1)
    uint8 RigVMModel___LimitPosition_1_IsNearlyEqual_1_Result;                        // 0x0206 (size: 0x1)
    float RigVMModel___LimitPosition_1_If_2_Result;                                   // 0x0208 (size: 0x4)
    uint8 RigVMModel___LimitPosition_1_Less_Result;                                   // 0x020C (size: 0x1)
    double RigVMModel___LimitPosition_1_Add_B;                                        // 0x0210 (size: 0x8)
    FVector RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_Result;         // 0x0218 (size: 0x18)
    FTransform RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_Transform; // 0x0230 (size: 0x60)
    TArray<FCachedRigElement> RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_CachedIndex; // 0x0290 (size: 0x10)
    FVector RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_A;              // 0x02A0 (size: 0x18)
    FVector RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_Result;   // 0x02B8 (size: 0x18)
    FVector RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Result; // 0x02D0 (size: 0x18)
    FTransform RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_Transform; // 0x02F0 (size: 0x60)
    TArray<FCachedRigElement> RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_CachedIndex; // 0x0350 (size: 0x10)
    FQuat RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Quaternion; // 0x0360 (size: 0x20)
    FTransform RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Value__IO; // 0x0380 (size: 0x60)
    TArray<FCachedRigElement> RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_CachedIndex; // 0x03E0 (size: 0x10)
    FVector RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_1_Result;       // 0x03F0 (size: 0x18)
    FVector RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_1_Result; // 0x0408 (size: 0x18)
    FTransform RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_Value__IO; // 0x0420 (size: 0x60)
    TArray<FCachedRigElement> RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_CachedIndex; // 0x0480 (size: 0x10)
    double RigVMModel___Multiply_Result;                                              // 0x0490 (size: 0x8)
    float RigVMModel___RigUnit_GetFloatAnimationChannel_Value;                        // 0x0498 (size: 0x4)
    TArray<FRigElementKey> RigVMModel___RigUnit_GetFloatAnimationChannel_CachedChannelKey; // 0x04A0 (size: 0x10)
    TArray<int32> RigVMModel___RigUnit_GetFloatAnimationChannel_CachedChannelHash;    // 0x04B0 (size: 0x10)
    double RigVMModel___Multiply_A;                                                   // 0x04C0 (size: 0x8)
    float RigVMModel___If_4_Result;                                                   // 0x04C8 (size: 0x4)
    uint8 RigVMModel___If_4_Condition;                                                // 0x04CC (size: 0x1)
    double RigVMModel___Clamp_Result;                                                 // 0x04D0 (size: 0x8)
    float RigVMModel___If_4_True;                                                     // 0x04D8 (size: 0x4)
    double RigVMModel___Multiply_B;                                                   // 0x04E0 (size: 0x8)
    FTransform RigVMModel___RigUnit_GetTransform_1_2_Transform;                       // 0x04F0 (size: 0x60)
    TArray<FCachedRigElement> RigVMModel___RigUnit_GetTransform_1_2_CachedIndex;      // 0x0550 (size: 0x10)
    FRigUnit_AimItem_Target RigVMModel___AimItem_1_2_Primary__IO;                     // 0x0560 (size: 0x48)
    float RigVMModel___AimItem_1_2_Weight;                                            // 0x05A8 (size: 0x4)
    TArray<FCachedRigElement> RigVMModel___AimItem_1_2_CachedItem;                    // 0x05B0 (size: 0x10)
    TArray<FCachedRigElement> RigVMModel___AimItem_1_2_PrimaryCachedSpace;            // 0x05C0 (size: 0x10)
    TArray<FCachedRigElement> RigVMModel___AimItem_1_2_SecondaryCachedSpace;          // 0x05D0 (size: 0x10)
    float RigVMModel___OffsetTransformForItem_1_2_Weight;                             // 0x05E0 (size: 0x4)
    TArray<FCachedRigElement> RigVMModel___OffsetTransformForItem_1_2_CachedIndex;    // 0x05E8 (size: 0x10)
    FTransform RigVMModel___RigUnit_GetTransform_2_1_Transform;                       // 0x0600 (size: 0x60)
    TArray<FCachedRigElement> RigVMModel___RigUnit_GetTransform_2_1_CachedIndex;      // 0x0660 (size: 0x10)
    FRigUnit_AimItem_Target RigVMModel___AimItem_1_1_1_Primary__IO;                   // 0x0670 (size: 0x48)
    float RigVMModel___AimItem_1_1_1_Weight;                                          // 0x06B8 (size: 0x4)
    TArray<FCachedRigElement> RigVMModel___AimItem_1_1_1_CachedItem;                  // 0x06C0 (size: 0x10)
    TArray<FCachedRigElement> RigVMModel___AimItem_1_1_1_PrimaryCachedSpace;          // 0x06D0 (size: 0x10)
    TArray<FCachedRigElement> RigVMModel___AimItem_1_1_1_SecondaryCachedSpace;        // 0x06E0 (size: 0x10)
    float RigVMModel___OffsetTransformForItem_1_2_1_Weight;                           // 0x06F0 (size: 0x4)
    TArray<FCachedRigElement> RigVMModel___OffsetTransformForItem_1_2_1_CachedIndex;  // 0x06F8 (size: 0x10)
    double RigVMModel___CalculateEyelidsOffset_1_Absolute_Result;                     // 0x0708 (size: 0x8)
    double RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_Result;                    // 0x0710 (size: 0x8)
    double RigVMModel___CalculateEyelidsOffset_1_Atan_Result;                         // 0x0718 (size: 0x8)
    double RigVMModel___CalculateEyelidsOffset_1_Divide_Result;                       // 0x0720 (size: 0x8)
    FVector RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Vector;  // 0x0728 (size: 0x18)
    FVector RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Minimum; // 0x0740 (size: 0x18)
    FVector RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Maximum; // 0x0758 (size: 0x18)
    TArray<FCachedRigElement> RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_CachedControlIndex; // 0x0770 (size: 0x10)
    double RigVMModel___CalculateEyelidsOffset_1_Divide_A;                            // 0x0780 (size: 0x8)
    double RigVMModel___CalculateEyelidsOffset_1_Subtract_Result;                     // 0x0788 (size: 0x8)
    double RigVMModel___CalculateEyelidsOffset_1_Subtract_A;                          // 0x0790 (size: 0x8)
    uint8 RigVMModel___CalculateEyelidsOffset_1_GreaterEqual_Result;                  // 0x0798 (size: 0x1)
    FQuat RigVMModel___If_3_1_1_Result;                                               // 0x07A0 (size: 0x20)
    uint8 RigVMModel___If_3_1_1_Condition;                                            // 0x07C0 (size: 0x1)
    FVector RigVMModel___If_Result;                                                   // 0x07C8 (size: 0x18)
    uint8 RigVMModel___If_Condition;                                                  // 0x07E0 (size: 0x1)
    FVector RigVMModel___Scale_2_3_Result;                                            // 0x07E8 (size: 0x18)
    float RigVMModel___Scale_2_3_Factor;                                              // 0x0800 (size: 0x4)
    FVector RigVMModel___Scale_2_Result;                                              // 0x0808 (size: 0x18)
    float RigVMModel___Scale_2_Factor;                                                // 0x0820 (size: 0x4)
    FTransform RigVMModel___OffsetTransformForItem_1_2_1_1_5_OffsetTransform__IO;     // 0x0830 (size: 0x60)
    float RigVMModel___OffsetTransformForItem_1_2_1_1_5_Weight;                       // 0x0890 (size: 0x4)
    TArray<FCachedRigElement> RigVMModel___OffsetTransformForItem_1_2_1_1_5_CachedIndex; // 0x0898 (size: 0x10)
    FQuat RigVMModel___If_3_1_Result;                                                 // 0x08B0 (size: 0x20)
    uint8 RigVMModel___If_3_1_Condition;                                              // 0x08D0 (size: 0x1)
    FVector RigVMModel___If_1_Result;                                                 // 0x08D8 (size: 0x18)
    uint8 RigVMModel___If_1_Condition;                                                // 0x08F0 (size: 0x1)
    FVector RigVMModel___Scale_2_1_1_Result;                                          // 0x08F8 (size: 0x18)
    float RigVMModel___Scale_2_1_1_Factor;                                            // 0x0910 (size: 0x4)
    FVector RigVMModel___Scale_2_1_Result;                                            // 0x0918 (size: 0x18)
    float RigVMModel___Scale_2_1_Factor;                                              // 0x0930 (size: 0x4)
    FTransform RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_OffsetTransform__IO;   // 0x0940 (size: 0x60)
    float RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_Weight;                     // 0x09A0 (size: 0x4)
    TArray<FCachedRigElement> RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_CachedIndex; // 0x09A8 (size: 0x10)
    FQuat RigVMModel___If_3_Result;                                                   // 0x09C0 (size: 0x20)
    uint8 RigVMModel___If_3_Condition;                                                // 0x09E0 (size: 0x1)
    FVector RigVMModel___If_1_1_Result;                                               // 0x09E8 (size: 0x18)
    uint8 RigVMModel___If_1_1_Condition;                                              // 0x0A00 (size: 0x1)
    FVector RigVMModel___Scale_2_2_3_Result;                                          // 0x0A08 (size: 0x18)
    float RigVMModel___Scale_2_2_3_Factor;                                            // 0x0A20 (size: 0x4)
    FVector RigVMModel___Scale_2_2_Result;                                            // 0x0A28 (size: 0x18)
    float RigVMModel___Scale_2_2_Factor;                                              // 0x0A40 (size: 0x4)
    FTransform RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_OffsetTransform__IO;   // 0x0A50 (size: 0x60)
    float RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_Weight;                     // 0x0AB0 (size: 0x4)
    TArray<FCachedRigElement> RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_CachedIndex; // 0x0AB8 (size: 0x10)
    FQuat RigVMModel___If_3_1_2_Result;                                               // 0x0AD0 (size: 0x20)
    uint8 RigVMModel___If_3_1_2_Condition;                                            // 0x0AF0 (size: 0x1)
    FVector RigVMModel___If_1_1_1_Result;                                             // 0x0AF8 (size: 0x18)
    uint8 RigVMModel___If_1_1_1_Condition;                                            // 0x0B10 (size: 0x1)
    FVector RigVMModel___Scale_2_2_1_1_Result;                                        // 0x0B18 (size: 0x18)
    float RigVMModel___Scale_2_2_1_1_Factor;                                          // 0x0B30 (size: 0x4)
    FVector RigVMModel___Scale_2_2_1_Result;                                          // 0x0B38 (size: 0x18)
    float RigVMModel___Scale_2_2_1_Factor;                                            // 0x0B50 (size: 0x4)
    FTransform RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_OffsetTransform__IO; // 0x0B60 (size: 0x60)
    float RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_Weight;                   // 0x0BC0 (size: 0x4)
    TArray<FCachedRigElement> RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_CachedIndex; // 0x0BC8 (size: 0x10)
    FQuat RigVMModel___If_3_1_1_1_Result;                                             // 0x0BE0 (size: 0x20)
    uint8 RigVMModel___If_3_1_1_1_Condition;                                          // 0x0C00 (size: 0x1)
    FVector RigVMModel___If_2_Result;                                                 // 0x0C08 (size: 0x18)
    uint8 RigVMModel___If_2_Condition;                                                // 0x0C20 (size: 0x1)
    FVector RigVMModel___Scale_2_3_1_Result;                                          // 0x0C28 (size: 0x18)
    float RigVMModel___Scale_2_3_1_Factor;                                            // 0x0C40 (size: 0x4)
    FVector RigVMModel___Scale_2_4_Result;                                            // 0x0C48 (size: 0x18)
    float RigVMModel___Scale_2_4_Factor;                                              // 0x0C60 (size: 0x4)
    FTransform RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_OffsetTransform__IO;   // 0x0C70 (size: 0x60)
    float RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_Weight;                     // 0x0CD0 (size: 0x4)
    TArray<FCachedRigElement> RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_CachedIndex; // 0x0CD8 (size: 0x10)
    FQuat RigVMModel___If_3_1_1_1_1_Result;                                           // 0x0CF0 (size: 0x20)
    uint8 RigVMModel___If_3_1_1_1_1_Condition;                                        // 0x0D10 (size: 0x1)
    FVector RigVMModel___If_1_2_Result;                                               // 0x0D18 (size: 0x18)
    uint8 RigVMModel___If_1_2_Condition;                                              // 0x0D30 (size: 0x1)
    FVector RigVMModel___Scale_2_1_1_1_Result;                                        // 0x0D38 (size: 0x18)
    float RigVMModel___Scale_2_1_1_1_Factor;                                          // 0x0D50 (size: 0x4)
    FVector RigVMModel___Scale_2_1_2_Result;                                          // 0x0D58 (size: 0x18)
    float RigVMModel___Scale_2_1_2_Factor;                                            // 0x0D70 (size: 0x4)
    FTransform RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_OffsetTransform__IO; // 0x0D80 (size: 0x60)
    float RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_Weight;                   // 0x0DE0 (size: 0x4)
    TArray<FCachedRigElement> RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_CachedIndex; // 0x0DE8 (size: 0x10)
    FQuat RigVMModel___If_3_1_1_1_1_1_Result;                                         // 0x0E00 (size: 0x20)
    uint8 RigVMModel___If_3_1_1_1_1_1_Condition;                                      // 0x0E20 (size: 0x1)
    FVector RigVMModel___If_1_1_2_Result;                                             // 0x0E28 (size: 0x18)
    uint8 RigVMModel___If_1_1_2_Condition;                                            // 0x0E40 (size: 0x1)
    FVector RigVMModel___Scale_2_2_3_1_Result;                                        // 0x0E48 (size: 0x18)
    float RigVMModel___Scale_2_2_3_1_Factor;                                          // 0x0E60 (size: 0x4)
    FVector RigVMModel___Scale_2_2_2_Result;                                          // 0x0E68 (size: 0x18)
    float RigVMModel___Scale_2_2_2_Factor;                                            // 0x0E80 (size: 0x4)
    FTransform RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_OffsetTransform__IO; // 0x0E90 (size: 0x60)
    float RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_Weight;                   // 0x0EF0 (size: 0x4)
    TArray<FCachedRigElement> RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_CachedIndex; // 0x0EF8 (size: 0x10)
    FQuat RigVMModel___If_3_1_1_1_1_2_Result;                                         // 0x0F10 (size: 0x20)
    uint8 RigVMModel___If_3_1_1_1_1_2_Condition;                                      // 0x0F30 (size: 0x1)
    FVector RigVMModel___If_1_1_1_1_Result;                                           // 0x0F38 (size: 0x18)
    uint8 RigVMModel___If_1_1_1_1_Condition;                                          // 0x0F50 (size: 0x1)
    FVector RigVMModel___Scale_2_2_1_1_1_Result;                                      // 0x0F58 (size: 0x18)
    float RigVMModel___Scale_2_2_1_1_1_Factor;                                        // 0x0F70 (size: 0x4)
    FVector RigVMModel___Scale_2_2_1_2_Result;                                        // 0x0F78 (size: 0x18)
    float RigVMModel___Scale_2_2_1_2_Factor;                                          // 0x0F90 (size: 0x4)
    FTransform RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_OffsetTransform__IO; // 0x0FA0 (size: 0x60)
    float RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_Weight;                 // 0x1000 (size: 0x4)
    TArray<FCachedRigElement> RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_CachedIndex; // 0x1008 (size: 0x10)
    uint8 RigVMModel___Greater_Result;                                                // 0x1018 (size: 0x1)
    float RigVMModel___ProceduralEyesIdle_If_Result;                                  // 0x101C (size: 0x4)
    uint8 RigVMModel___ProceduralEyesIdle_Greater_Result;                             // 0x1020 (size: 0x1)
    double RigVMModel___ProceduralEyesIdle_Add_Result;                                // 0x1028 (size: 0x8)
    double RigVMModel___ProceduralEyesIdle_Multiply_3_Result;                         // 0x1030 (size: 0x8)
    double RigVMModel___ProceduralEyesIdle_Divide_1_Result;                           // 0x1038 (size: 0x8)
    float RigVMModel___ProceduralEyesIdle_GetDeltaTime_1_Result;                      // 0x1040 (size: 0x4)
    double RigVMModel___ProceduralEyesIdle_Divide_1_A;                                // 0x1048 (size: 0x8)
    float RigVMModel___ProceduralEyesIdle_If_False;                                   // 0x1050 (size: 0x4)
    FQuat RigVMModel___ProceduralEyesIdle_Cast_Result;                                // 0x1060 (size: 0x20)
    float RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_Result;                 // 0x1080 (size: 0x4)
    float RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_Value;                  // 0x1084 (size: 0x4)
    float RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_TargetMaximum;          // 0x1088 (size: 0x4)
    float RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_Result;               // 0x108C (size: 0x4)
    float RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_Value;                // 0x1090 (size: 0x4)
    float RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_TargetMaximum;        // 0x1094 (size: 0x4)
    float RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_Result;                   // 0x1098 (size: 0x4)
    float RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_Value;                    // 0x109C (size: 0x4)
    float RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_TargetMaximum;            // 0x10A0 (size: 0x4)
    FRotator RigVMModel___ProceduralEyesIdle_Cast_Value__IO;                          // 0x10A8 (size: 0x18)
    FTransform RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_1_OffsetTransform__IO; // 0x10C0 (size: 0x60)
    float RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_1_Weight;    // 0x1120 (size: 0x4)
    TArray<FCachedRigElement> RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_1_CachedIndex; // 0x1128 (size: 0x10)
    FQuat RigVMModel___ProceduralEyesIdle_Cast_1_Result;                              // 0x1140 (size: 0x20)
    float RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_2_Result;               // 0x1160 (size: 0x4)
    float RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_2_Value;                // 0x1164 (size: 0x4)
    float RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_2_TargetMaximum;        // 0x1168 (size: 0x4)
    float RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_2_Result;             // 0x116C (size: 0x4)
    float RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_2_Value;              // 0x1170 (size: 0x4)
    float RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_2_TargetMaximum;      // 0x1174 (size: 0x4)
    float RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_2_Result;                 // 0x1178 (size: 0x4)
    float RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_2_Value;                  // 0x117C (size: 0x4)
    float RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_2_TargetMaximum;          // 0x1180 (size: 0x4)
    FRotator RigVMModel___ProceduralEyesIdle_Cast_1_Value__IO;                        // 0x1188 (size: 0x18)
    FTransform RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_OffsetTransform__IO; // 0x11A0 (size: 0x60)
    float RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_Weight;      // 0x1200 (size: 0x4)
    TArray<FCachedRigElement> RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_CachedIndex; // 0x1208 (size: 0x10)

}; // Size: 0x1218

#endif
